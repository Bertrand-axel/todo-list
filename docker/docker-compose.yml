version: '3.7'

services:
  traefik:
    image: traefik:v1.7.6 # The official Traefik docker image
    restart: on-failure
    command: --api --docker --logLevel=DEBUG # Enables the web UI and tells Traefik to listen to docker
    ports:
      - 80:80     # The HTTP port
      - 443:443
    #  - 8080:8080 # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - ./image/traefik/traefik.toml:/traefik.toml
    labels:
      - traefik.docker.network=frontend
      - traefik.enable=true
      - traefik.frontend.rule=Host:traefik.localhost
      - traefik.frontend.protocol=http
      - traefik.port=8080
      - "traefik.http.routers.proxy=Host('traefik.localhost')"
    networks:
      - frontend
  portainer:
    image: portainer/portainer:latest # The official Traefik docker image
    restart: on-failure
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      - portainer:/data
    labels:
      - traefik.docker.network=frontend
      - traefik.enable=true
      - traefik.frontend.rule=Host:portainer.localhost
      - traefik.frontend.protocol=http
      - traefik.port=9000
    networks:
      - frontend
  nginx:
    image: nginx:1.20
    depends_on: 
      - symfony
    volumes:
      - ./image/nginx/sites:/etc/nginx/conf.d:ro
      - ../:/var/www/html/www
    labels:
      - traefik.docker.network=frontend
      - traefik.enable=true
      - traefik.frontend.rule=Host:${PROJECT_URL};PathPrefix:/api
      - traefik.frontend.protocol=http,https
      - traefik.port=80
    networks:
      - frontend
      - backend

  postgres:
    image: postgres:15.2
    restart: on-failure
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./..:/project:delegated
    ports:
      - "3306:3306"
    networks:
      - backend

  symfony:
    image: thecodingmachine/php:8.2-v4-fpm
    links:
      - postgres:database
    depends_on:
      - postgres
    environment:
      PHP_EXTENSION_GD: 1
      PHP_EXTENSION_INTL: 1
      PHP_EXTENSION_MCRYPT: 1
      PHP_EXTENSION_UUID: 1
      PHP_EXTENSION_PGSQL: 1
      PHP_EXTENSION_PDO_PGSQL: 1
      PHP_EXTENSION_MYSQLI: 0
      PHP_EXTENSION_PDO_MYSQL: 0
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./../api:/var/www/html
    networks:
      - backend

  react:
    image: node:18.16
    environment:
      NODE_ENV: ${SERVER_ENV}
    working_dir: /var/www/html
    volumes:
      - ./../react:/var/www/html
    command: "npm run dev"
    labels:
      - traefik.docker.network=frontend
      - traefik.enable=true
      - traefik.frontend.rule=Host:${PROJECT_URL}
      - traefik.frontend.protocol=http,https
      - traefik.port=8080
    networks:
      - frontend


volumes:
  postgres:
  portainer:

networks:
  backend:
  frontend:
    external: true
